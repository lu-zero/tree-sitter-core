name: tree-sitter-core

on: [push, pull_request]

jobs:

  rustfmt-clippy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Run rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check --verbose

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features -- --verbose

  cargo-c:

    env:
      RUST_BACKTRACE: 1
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 300M
      SCCACHE_DIR: /home/runner/.cache/sccache
      SCCACHE_IDLE_TIMEOUT: 0

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install sccache
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.13
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "::add-path::$HOME/.local/bin"

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Generate Cargo.lock
      run: |
        cargo update

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry/cache
        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-

    - name: Cache sccache output
      uses: actions/cache@v1
      with:
        path: ~/.cache/sccache
        key: sccache-${{ hashFiles('**/Cargo.*') }}
        restore-keys: |
          sccache-

    - name: Start sccache server
      run: |
        sccache --start-server

    - name: Install cargo-c
      run: |
        cargo install cargo-c

    - name: Run cargo-c
      run: |
        cargo cinstall --destdir=$HOME/tree-sitter-core

    - name: Stop sccache server
      run: |
        sccache --stop-server

  tests:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Run no-default-features tests
      run: |
        cargo test --no-default-features

    - name: Run all-features tests
      run: |
        cargo test --all-features
