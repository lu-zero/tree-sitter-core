name: tree-sitter-core

on: [push, pull_request]

jobs:

  rustfmt-clippy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy

    - name: Run rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check --verbose

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --all-features --tests -- --verbose


#  cargo-grcov:
#
#    env:
#      RUST_BACKTRACE: 1
#      RUSTC_WRAPPER: sccache
#      SCCACHE_CACHE_SIZE: 300M
#      SCCACHE_DIR: /home/runner/.cache/sccache
#      SCCACHE_IDLE_TIMEOUT: 0
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Install sccache
#      env:
#        LINK: https://github.com/mozilla/sccache/releases/download
#        SCCACHE_VERSION: 0.2.13
#      run: |
#        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
#        mkdir -p $HOME/.local/bin
#        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
#        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
#        echo "::add-path::$HOME/.local/bin"
#
#    - name: Install grcov
#      env:
#        LINK: https://github.com/mozilla/grcov/releases/download
#        GRCOV_VERSION: 0.5.9
#      run: |
#        curl -L "$LINK/v$GRCOV_VERSION/grcov-linux-x86_64.tar.bz2" |
#        tar xj -C $HOME/.cargo/bin
#
#    - name: Install nightly
#      uses: actions-rs/toolchain@v1
#      with:
#        profile: minimal
#        toolchain: nightly
#        override: true
#
#    - name: Generate Cargo.lock
#      run: |
#        cargo update
#
#    - name: Cache cargo registry
#      uses: actions/cache@v1
#      with:
#        path: ~/.cargo/registry/cache
#        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
#        restore-keys: |
#          cargo-registry-
#
#    - name: Cache sccache output
#      uses: actions/cache@v1
#      with:
#        path: /home/runner/.cache/sccache
#        key: sccache-${{ hashFiles('**/Cargo.*') }}
#        restore-keys: |
#          sccache-
#
#    - name: Start sccache server
#      run: |
#        sccache --start-server
#
#    - name: Replace hypens with underscores
#      run: |
#        sed -i 's/"tree-sitter-core"/"tree_sitter_core"/' ./Cargo.toml
#
#    - name: Run cargo clean
#      run: |
#        cargo clean
#
#    - name: Run tests
#      env:
#        CARGO_INCREMENTAL: 0
#        RUSTFLAGS: >
#          -Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off
#          -Zno-landing-pads
#      run: |
#        cargo test --all --all-features --no-fail-fast --verbose
#
#    - name: Run grcov
#      id: coverage
#      uses: actions-rs/grcov@v0.1
#
#    - name: Restore hypens
#      run: |
#        git checkout .
#
#    - name: Stop sccache server
#      run: |
#        sccache --stop-server
#
#    - name: Coveralls upload
#      uses: coverallsapp/github-action@master
#      with:
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        path-to-lcov: ${{ steps.coverage.outputs.report }}


  ubuntu-tests:

    strategy:
      matrix:
        conf: [tests, cargo-c]

    env:
      RUST_BACKTRACE: 1
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 1.3G
      SCCACHE_DIR: /home/runner/.cache/sccache
      SCCACHE_IDLE_TIMEOUT: 0

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install sccache
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.13
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "::add-path::$HOME/.local/bin"

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Generate Cargo.lock
      if: matrix.conf == 'cargo-c'
      run: |
        cargo update

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry/cache
        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-

    - name: Cache sccache output
      uses: actions/cache@v1
      with:
        path: ~/.cache/sccache
        key: sccache-${{ hashFiles('**/Cargo.*') }}
        restore-keys: |
          sccache-

    - name: Cache data tests
      if: matrix.conf != 'cargo-c'
      uses: actions/cache@v1
      with:
        path: data
        key: data-${{ hashFiles('**/Cargo.*') }}
        restore-keys: |
          data-

    - name: Start sccache server
      run: |
        sccache --start-server

    - name: Run no-default-features tests
      if: matrix.conf != 'cargo-c'
      run: |
        cargo test --all --no-default-features

    - name: Run all-features tests
      if: matrix.conf != 'cargo-c'
      run: |
        cargo test --all --all-features

    - name: Install cargo-c
      if: matrix.conf == 'cargo-c'
      run: |
        cargo install cargo-c

    - name: Run cargo-c
      if: matrix.conf == 'cargo-c'
      run: |
        cargo cinstall --destdir=$HOME/tree-sitter-core

    - name: Stop sccache server
      run: |
        sccache --stop-server

  macos-tests:

    env:
      RUST_BACKTRACE: 1
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 1.3G
      SCCACHE_DIR: /Users/runner/Library/Caches/Mozilla.sccache
      SCCACHE_IDLE_TIMEOUT: 0

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install sccache
      run: |
        brew install sccache

    - name: Install stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry/cache
        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-

    - name: Cache sccache output
      uses: actions/cache@v1
      with:
        path: /Users/runner/Library/Caches/Mozilla.sccache
        key: sccache-${{ hashFiles('**/Cargo.*') }}
        restore-keys: |
          sccache-

    - name: Cache data tests
      uses: actions/cache@v1
      with:
        path: data
        key: data-${{ hashFiles('**/Cargo.*') }}
        restore-keys: |
          data-

    - name: Start sccache server
      run: |
        sccache --start-server

    - name: Run no-default-features tests
      run: |
        cargo test --all --no-default-features

    - name: Run all-features tests
      run: |
        cargo test --all --all-features

    - name: Stop sccache server
      run: |
        sccache --stop-server
